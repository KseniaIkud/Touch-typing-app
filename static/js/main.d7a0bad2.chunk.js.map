{"version":3,"sources":["store/actions.js","store/initialState.js","store/reducer.js","utils/getText.js","utils/getCurrentTime.js","utils/useKeyPress.js","components/Language.jsx","components/Start.jsx","icons/restart.png","components/TypingArea.jsx","components/Result.jsx","components/TypeTextTest.jsx","components/App.js","index.js","components/TypingArea.module.css"],"names":["ACTIONS","RESET_STATE","SET_TEXT","SET_RIGHT_KEY","SET_WRONG_KEY","COMPLETE","WRONG_SYMBOL","START","SET_SPEED","SET_LANGUAGE","initialState","outgoingValues","typedText","incomingValues","_textLength","percent","currentSymbol","isSymbolWrong","startTime","speed","accuracy","language","isStart","isResult","_mistakes","_duration","Store","React","createContext","reducer","state","action","type","result","substr","length","charAt","time","toFixed","key","getText","fetch","then","response","json","object","text","array","getCurrentTime","Date","getTime","useKeyPress","callback","keyPressed","setKeyPressed","useState","downHandler","_ref","upHandler","useEffect","window","addEventListener","removeEventListener","Language","dispatch","useContext","changeLanguage","_jsxs","Dropdown","children","Toggle","variant","id","Menu","_jsx","Item","eventKey","onClick","Start","onStart","className","Alert","show","Heading","Button","TypingArea","classes","typingArea","header","ProgressBar","now","animated","src","restart","alt","width","content","outgoingValue","keyWrong","Result","TypeTextTest","Boolean","App","useReducer","Provider","value","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d7a0bad2.chunk.js","sourcesContent":["const ACTIONS = {\n    RESET_STATE: 'RESET_STATE',\n    SET_TEXT: 'SET_TEXT',\n    SET_RIGHT_KEY: 'SET_RIGHT_KEY',\n    SET_WRONG_KEY: 'SET_WRONG_KEY',\n    COMPLETE: 'COMPLETE',\n    WRONG_SYMBOL: 'WRONG_SYMBOL',\n    START: 'START',\n    SET_SPEED: 'SET_SPEED',\n    SET_LANGUAGE: 'SET_LANGUAGE'\n}\nexport default ACTIONS","const initialState = {\n    outgoingValues: '',\n    typedText: '',\n    incomingValues: '',\n    _textLength: 0,\n    percent: 0,\n    currentSymbol: '',\n    isSymbolWrong: false,\n    startTime: null,\n    speed: 0,\n    accuracy: 100,\n    language: 'eng',\n    isStart: true,\n    isResult: false,\n    _mistakes: 0,\n    _duration: 0\n};\n\nexport default initialState","import React from 'react';\n\nimport ACTIONS from './actions';\nimport initialState from './initialState';\n\nexport const Store = React.createContext();\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.RESET_STATE:\n            return {\n                ...initialState,\n                isStart: false,\n                language: state.language\n            }\n        case ACTIONS.SET_TEXT:\n            return {\n                ...state,\n                incomingValues: action.result.substr(1),\n                _textLength: action.result.length,\n                currentSymbol: action.result.charAt(0),\n            }\n        case ACTIONS.START:\n            return {\n                ...state,\n                startTime: state.startTime || action.time\n            }\n        case ACTIONS.SET_SPEED:\n            return {\n                ...state,\n                _duration: (action.time - state.startTime) / 60000,\n                speed: state._duration ?\n                    (state.outgoingValues.length / state._duration).toFixed(0,) : 0\n            }\n        case ACTIONS.SET_RIGHT_KEY:\n            return {\n                ...state,\n                outgoingValues: state.outgoingValues + action.key,\n                typedText: state.typedText + action.key,\n                incomingValues: state.incomingValues.substr(1),\n                currentSymbol: state.incomingValues.charAt(0),\n                isSymbolWrong: false,\n                percent: ((state.outgoingValues.length + 1) * 100) / state._textLength\n            }\n        case ACTIONS.COMPLETE:\n            return {\n                ...state,\n                isResult: true,\n                outgoingValues: ''\n            }\n        case ACTIONS.WRONG_SYMBOL:\n            return {\n                ...state,\n                isSymbolWrong: true\n            }\n        case ACTIONS.SET_WRONG_KEY:\n            return {\n                ...state,\n                typedText: state.typedText + action.key,\n                accuracy: (100 - ((state._mistakes + 1) * 100 / state._textLength)).toFixed(1,),\n                _mistakes: state._mistakes + 1\n            }\n\n        case ACTIONS.SET_LANGUAGE:\n            return {\n                ...state,\n                language: action.language\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;","const getText = (language) => {\n    if (language === 'rus') {\n        return fetch('https://fish-text.ru/get?format=json&number=3')\n            .then(response => response.json())\n            .then(object => object.text)\n    }\n    if (language === 'eng') {\n        return fetch('https://baconipsum.com/api/?type=all-meat&sentences=4')\n            .then(response => response.json())\n            .then(array => array[0])\n    }\n}\nexport default getText\n","const getCurrentTime = () => new Date().getTime()\n\nexport default getCurrentTime","import {useState, useEffect} from 'react';\n\nconst useKeyPress = (callback) => {\n    const [keyPressed, setKeyPressed] = useState()\n    const downHandler = ({key}) => {\n        if (keyPressed !== key && key.length === 1) {\n            setKeyPressed(key)\n            callback(key)\n        }\n    }\n    const upHandler = () => {\n        setKeyPressed(null)\n    }\n    useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        window.addEventListener('keyup', upHandler);\n        return () => {\n            window.removeEventListener('keydown', downHandler);\n            window.removeEventListener('keyup', upHandler);\n        }\n    })\n    return keyPressed\n};\nexport default useKeyPress;","import React, {useContext} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown } from 'react-bootstrap';\n\nimport ACTIONS from '../store/actions';\nimport {Store} from '../store/reducer';\n\nconst Language = () => {\n    const {state, dispatch} = useContext(Store);\n\n    const changeLanguage = (language) => {\n        dispatch({type: ACTIONS.SET_LANGUAGE, language});\n    };\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n                {state.language === 'eng' && 'English'}\n                {state.language === 'rus' && 'Russian'}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n                <Dropdown.Item eventKey=\"1\" onClick={() => changeLanguage('rus')}>russian</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\" onClick={() => changeLanguage('eng')}>english</Dropdown.Item>\n            </Dropdown.Menu>\n        </Dropdown>\n    )\n}\n\nexport default Language\n","import React, { useContext } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Alert, Button} from 'react-bootstrap';\n\nimport Language from './Language';\n\nimport {Store} from '../store/reducer';\n\nconst Start = ({onStart}) => {\n    const {state} = useContext(Store);\n    return (\n        <div className={state.isStart ? \"w-100 h-75 position-absolute d-flex justify-content-center\" : \"d-none\"}>\n                <Alert show={state.isStart} variant=\"secondary\" className=\"w-25 align-self-center\">\n                    <Alert.Heading>Check your typing speed</Alert.Heading>\n                    <p>\n                        Type a short text to measure your typing speed and accuracy\n                    </p>\n                    <hr />\n                    <div className=\"d-flex justify-content-between\">\n                    <Button onClick={onStart} variant=\"outline-info\">\n                        Start\n                    </Button>\n                    <Language/>\n                    </div>\n                </Alert>\n            \n        </div>\n    )\n}\n\nexport default Start\n","export default __webpack_public_path__ + \"static/media/restart.6f33e8f5.png\";","import React, {useContext} from 'react';\n\nimport classes from './TypingArea.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {ProgressBar} from 'react-bootstrap';\n\nimport restart from '../icons/restart.png';\n\nimport {Store} from '../store/reducer';\n\nconst TypingArea = ({onStart}) => {\n    const {state} = useContext(Store);\n    return (\n        <div className={classes.typingArea}>\n            <div className={classes.header}>\n                <ProgressBar now={state.percent} variant=\"success\" animated className=\"w-75\"/>\n                <img src={restart} alt=\"restart\" width=\"40\" className={classes.restart} \n                    onClick={onStart}/>\n            </div>\n            <div className={classes.content}>\n                <div className={classes.text}>\n                    <span className={classes.outgoingValue}>\n                        {state.outgoingValues}\n                    </span>\n                    <span className={`${classes.key} ${state.isSymbolWrong && classes.keyWrong}`}>\n                        {state.currentSymbol}\n                    </span>\n                    <span>{state.incomingValues}</span>\n                </div>\n                <div className={classes.result}>\n                    <div>\n                        Speed \n                        <div>\n                            {state.speed} cpm\n                        </div>\n                    </div>\n                    \n                    <div>\n                        Accuracy\n                        <div>\n                            {state.accuracy}%\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TypingArea\n","import React, {useContext} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Alert, Button} from 'react-bootstrap';\n\nimport Language from './Language';\n\nimport {Store} from '../store/reducer';\n\nconst Result = ({onStart}) => {\n    const {state} = useContext(Store);\n    return (\n        <div className={state.isResult ? \"w-100 h-75 position-absolute d-flex justify-content-center\" : \"d-none\"}>\n            <Alert show={state.isResult} variant=\"success\" className=\"w-25 align-self-center\">\n                <Alert.Heading>Your result</Alert.Heading>\n                <p>\n                    {state.speed} Character Per Minute\n                </p>\n                <p>\n                    {state.accuracy}% accuracy\n                </p>\n                <hr />\n                <div className=\"d-flex justify-content-between\">\n                <Button onClick={onStart} variant=\"outline-success\">\n                    Start again\n                </Button>\n                <Language/>\n                </div>\n            </Alert>\n        </div>\n    )\n}\n\nexport default Result\n","import React, { useContext } from 'react';\nimport { Store } from '../store/reducer';\nimport ACTIONS from '../store/actions';\n\nimport getText from '../utils/getText';\nimport getCurrentTime from '../utils/getCurrentTime';\nimport useKeyPress from '../utils/useKeyPress';\n\nimport Start from './Start';\nimport TypingArea from './TypingArea';\nimport Result from './Result';\n\nconst TypeTextTest = () => {\n    const { state, dispatch } = useContext(Store);\n\n    const onStart = () => {\n        dispatch({ type: ACTIONS.RESET_STATE });\n        getText(state.language)\n            .then(result => {\n                dispatch({ type: ACTIONS.SET_TEXT, result });\n            });\n    };\n\n    const onKeyPress = (key) => {\n        dispatch({ type: ACTIONS.START, time: getCurrentTime() });\n        \n        let isTyping = Boolean(state.startTime && state.outgoingValues);\n        if (isTyping) {\n            dispatch({ type: ACTIONS.SET_SPEED, time: getCurrentTime() });\n        };\n\n        if (key === state.currentSymbol) {\n            dispatch({ type: ACTIONS.SET_RIGHT_KEY, key });\n\n            let isFinished = Boolean(state.startTime && !state.incomingValues);\n            if (isFinished) {\n                dispatch({ type: ACTIONS.COMPLETE });\n            };\n\n        } else {\n            dispatch({ type: ACTIONS.WRONG_SYMBOL });\n\n            let isMistakeNew = state.typedText.substr(-1) === state.outgoingValues.substr(-1);\n            if (isMistakeNew) {\n                dispatch({ type: ACTIONS.SET_WRONG_KEY, key });\n            };\n        };\n    };\n\n    useKeyPress(onKeyPress);\n\n    return <div>\n        <Start onStart={onStart} />\n        <Result onStart={onStart} />\n        <TypingArea onStart={onStart} />\n    </div>\n}\n\nexport default TypeTextTest","import React, { useReducer } from 'react';\nimport reducer, {Store} from '../store/reducer';\nimport initialState from '../store/initialState';\nimport TypeTextTest from './TypeTextTest';\n\n\nconst App = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    \n    return (\n        <Store.Provider value={{dispatch, state}}>\n            <TypeTextTest />\n        </Store.Provider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typingArea\":\"TypingArea_typingArea__zhN3k\",\"header\":\"TypingArea_header__2Ayd8\",\"restart\":\"TypingArea_restart__1aAgy\",\"content\":\"TypingArea_content__2Ni6O\",\"text\":\"TypingArea_text__2xc2o\",\"outgoingValue\":\"TypingArea_outgoingValue__1-43Q\",\"key\":\"TypingArea_key__1Ra3V\",\"keyWrong\":\"TypingArea_keyWrong__1gMvB\",\"result\":\"TypingArea_result__1UyyT\",\"resultName\":\"TypingArea_resultName__1L1v_\"};"],"sourceRoot":""}