{"version":3,"sources":["store/actions.js","store/initialState.js","store/reducer.js","utils/getText.js","utils/getCurrentTime.js","utils/useKeyPress.js","components/Language.jsx","components/Start.jsx","icons/restart.png","components/TypingArea.jsx","components/Result.jsx","components/TypeTextTest.jsx","components/App.js","index.js","components/TypingArea.module.css"],"names":["ACTIONS","RESET_STATE","SET_TEXT","SET_RIGHT_KEY","SET_WRONG_KEY","COMPLETE","WRONG_SYMBOL","START","SET_SPEED","SET_LANGUAGE","initialState","outgoingValues","typedText","incomingValues","_textLength","percent","currentSymbol","isSymbolWrong","startTime","speed","accuracy","language","isStart","isResult","_mistakes","_duration","Store","React","createContext","reducer","state","action","type","result","substr","length","charAt","time","toFixed","key","getText","fetch","then","response","json","object","text","array","getCurrentTime","Date","getTime","useKeyPress","callback","useState","keyPressed","setKeyPressed","downHandler","upHandler","useEffect","window","addEventListener","removeEventListener","Language","useContext","dispatch","changeLanguage","Dropdown","Toggle","variant","id","Menu","Item","eventKey","onClick","Start","onStart","className","Alert","show","Heading","Button","TypingArea","classes","typingArea","header","ProgressBar","now","animated","src","restart","alt","width","content","outgoingValue","keyWrong","Result","TypeTextTest","Boolean","App","useReducer","Provider","value","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8KAWeA,EAXC,CACZC,YAAa,cACbC,SAAU,WACVC,cAAe,gBACfC,cAAe,gBACfC,SAAU,WACVC,aAAc,eACdC,MAAO,QACPC,UAAW,YACXC,aAAc,gBCSHC,EAlBM,CACjBC,eAAgB,GAChBC,UAAW,GACXC,eAAgB,GAChBC,YAAa,EACbC,QAAS,EACTC,cAAe,GACfC,eAAe,EACfC,UAAW,KACXC,MAAO,EACPC,SAAU,IACVC,SAAU,MACVC,SAAS,EACTC,UAAU,EACVC,UAAW,EACXC,UAAW,GCVFC,EAAQC,IAAMC,gBAoEZC,MAlEf,SAAiBC,EAAOC,GACpB,OAAQA,EAAOC,MACX,KAAKhC,EAAQC,YACT,OAAO,2BACAS,GADP,IAEIY,SAAS,EACTD,SAAUS,EAAMT,WAExB,KAAKrB,EAAQE,SACT,OAAO,2BACA4B,GADP,IAEIjB,eAAgBkB,EAAOE,OAAOC,OAAO,GACrCpB,YAAaiB,EAAOE,OAAOE,OAC3BnB,cAAee,EAAOE,OAAOG,OAAO,KAE5C,KAAKpC,EAAQO,MACT,OAAO,2BACAuB,GADP,IAEIZ,UAAWY,EAAMZ,WAAaa,EAAOM,OAE7C,KAAKrC,EAAQQ,UACT,OAAO,2BACAsB,GADP,IAEIL,WAAYM,EAAOM,KAAOP,EAAMZ,WAAa,IAC7CC,MAAOW,EAAML,WACRK,EAAMnB,eAAewB,OAASL,EAAML,WAAWa,QAAQ,GAAM,IAE1E,KAAKtC,EAAQG,cACT,OAAO,2BACA2B,GADP,IAEInB,eAAgBmB,EAAMnB,eAAiBoB,EAAOQ,IAC9C3B,UAAWkB,EAAMlB,UAAYmB,EAAOQ,IACpC1B,eAAgBiB,EAAMjB,eAAeqB,OAAO,GAC5ClB,cAAec,EAAMjB,eAAeuB,OAAO,GAC3CnB,eAAe,EACfF,QAA8C,KAAnCe,EAAMnB,eAAewB,OAAS,GAAYL,EAAMhB,cAEnE,KAAKd,EAAQK,SACT,OAAO,2BACAyB,GADP,IAEIP,UAAU,EACVZ,eAAgB,KAExB,KAAKX,EAAQM,aACT,OAAO,2BACAwB,GADP,IAEIb,eAAe,IAEvB,KAAKjB,EAAQI,cACT,OAAO,2BACA0B,GADP,IAEIlB,UAAWkB,EAAMlB,UAAYmB,EAAOQ,IACpCnB,UAAW,IAA+B,KAAvBU,EAAMN,UAAY,GAAWM,EAAMhB,aAAcwB,QAAQ,GAC5Ed,UAAWM,EAAMN,UAAY,IAGrC,KAAKxB,EAAQS,aACT,OAAO,2BACAqB,GADP,IAEIT,SAAUU,EAAOV,WAEzB,QACI,OAAOS,ICzDJU,EAZC,SAACnB,GACb,MAAiB,QAAbA,EACOoB,MAAM,iDACRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,QAEd,QAAbzB,EACOoB,MAAM,yDACRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAK,GAAK,OAAIA,EAAM,WAH7B,GCJWC,EAFQ,kBAAM,IAAIC,MAAOC,WCuBzBC,EArBK,SAACC,GAAc,IAAD,EACMC,qBADN,mBACvBC,EADuB,KACXC,EADW,KAExBC,EAAc,SAAC,GAAW,IAAVjB,EAAS,EAATA,IACde,IAAef,GAAsB,IAAfA,EAAIJ,SAC1BoB,EAAchB,GACda,EAASb,KAGXkB,EAAY,WACdF,EAAc,OAUlB,OARAG,qBAAU,WAGN,OAFAC,OAAOC,iBAAiB,UAAWJ,GACnCG,OAAOC,iBAAiB,QAASH,GAC1B,WACHE,OAAOE,oBAAoB,UAAWL,GACtCG,OAAOE,oBAAoB,QAASJ,OAGrCH,G,uCCSIQ,EAtBE,WAAO,IAAD,EACOC,qBAAWrC,GAA9BI,EADY,EACZA,MAAOkC,EADK,EACLA,SAERC,EAAiB,SAAC5C,GACpB2C,EAAS,CAAChC,KAAMhC,EAAQS,aAAcY,cAG1C,OACI,eAAC6C,EAAA,EAAD,WACI,eAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,OAAOC,GAAG,iBAAnC,UACwB,QAAnBvC,EAAMT,UAAsB,+DACT,QAAnBS,EAAMT,UAAsB,gDAGjC,eAAC6C,EAAA,EAASI,KAAV,WACI,cAACJ,EAAA,EAASK,KAAV,CAAeC,SAAS,IAAIC,QAAS,kBAAMR,EAAe,QAA1D,wDACA,cAACC,EAAA,EAASK,KAAV,CAAeC,SAAS,IAAIC,QAAS,kBAAMR,EAAe,QAA1D,iFCODS,EAtBD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACL7C,EAASiC,qBAAWrC,GAApBI,MACP,OACI,qBAAK8C,UAAW9C,EAAMR,QAAU,6DAA+D,SAA/F,SACQ,eAACuD,EAAA,EAAD,CAAOC,KAAMhD,EAAMR,QAAS8C,QAAQ,YAAYQ,UAAU,yBAA1D,UACI,cAACC,EAAA,EAAME,QAAP,0LACA,oXAGA,uBACA,sBAAKH,UAAU,iCAAf,UACA,cAACI,EAAA,EAAD,CAAQP,QAASE,EAASP,QAAQ,eAAlC,kDAGA,cAAC,EAAD,a,wBCvBL,MAA0B,oCCiD1Ba,EAvCI,SAAC,GAAe,IAAdN,EAAa,EAAbA,QACV7C,EAASiC,qBAAWrC,GAApBI,MACP,OACI,sBAAK8C,UAAWM,IAAQC,WAAxB,UACI,sBAAKP,UAAWM,IAAQE,OAAxB,UACI,cAACC,EAAA,EAAD,CAAaC,IAAKxD,EAAMf,QAASqD,QAAQ,UAAUmB,UAAQ,EAACX,UAAU,SACtE,qBAAKY,IAAKC,EAASC,IAAI,UAAUC,MAAM,KAAKf,UAAWM,IAAQO,QAC3DhB,QAASE,OAEjB,sBAAKC,UAAWM,IAAQU,QAAxB,UACI,sBAAKhB,UAAWM,IAAQpC,KAAxB,UACI,sBAAM8B,UAAWM,IAAQW,cAAzB,SACK/D,EAAMnB,iBAEX,sBAAMiE,UAAS,UAAKM,IAAQ3C,IAAb,YAAoBT,EAAMb,eAAiBiE,IAAQY,UAAlE,SACKhE,EAAMd,gBAEX,+BAAOc,EAAMjB,oBAEjB,sBAAK+D,UAAWM,IAAQjD,OAAxB,UACI,mFAEI,gCACKH,EAAMX,MADX,yCAKJ,mFAEI,gCACKW,EAAMV,SADX,oBCNT2E,EAxBA,SAAC,GAAe,IAAdpB,EAAa,EAAbA,QACN7C,EAASiC,qBAAWrC,GAApBI,MACP,OACI,qBAAK8C,UAAW9C,EAAMP,SAAW,6DAA+D,SAAhG,SACI,eAACsD,EAAA,EAAD,CAAOC,KAAMhD,EAAMP,SAAU6C,QAAQ,UAAUQ,UAAU,yBAAzD,UACI,cAACC,EAAA,EAAME,QAAP,wFACA,8BACKjD,EAAMX,MADX,uFAGA,8BACKW,EAAMV,SADX,wDAGA,uBACA,sBAAKwD,UAAU,iCAAf,UACA,cAACI,EAAA,EAAD,CAAQP,QAASE,EAASP,QAAQ,kBAAlC,uFAGA,cAAC,EAAD,aCgCD4B,EA9CM,WAAO,IAAD,EACKjC,qBAAWrC,GAA/BI,EADe,EACfA,MAAOkC,EADQ,EACRA,SAETW,EAAU,WACZX,EAAS,CAAEhC,KAAMhC,EAAQC,cACzBuC,EAAQV,EAAMT,UACTqB,MAAK,SAAAT,GACF+B,EAAS,CAAEhC,KAAMhC,EAAQE,SAAU+B,eAgC/C,OAFAkB,GA1BmB,SAACZ,IAChByB,EAAS,CAAEhC,KAAMhC,EAAQO,MAAO8B,KAAMW,MAEvBiD,QAAQnE,EAAMZ,WAAaY,EAAMnB,iBAE5CqD,EAAS,CAAEhC,KAAMhC,EAAQQ,UAAW6B,KAAMW,MAG1CT,IAAQT,EAAMd,gBACdgD,EAAS,CAAEhC,KAAMhC,EAAQG,cAAeoC,QAEvB0D,QAAQnE,EAAMZ,YAAcY,EAAMjB,iBAE/CmD,EAAS,CAAEhC,KAAMhC,EAAQK,aAI7B2D,EAAS,CAAEhC,KAAMhC,EAAQM,eAENwB,EAAMlB,UAAUsB,QAAQ,KAAOJ,EAAMnB,eAAeuB,QAAQ,IAE3E8B,EAAS,CAAEhC,KAAMhC,EAAQI,cAAemC,YAO7C,gCACH,cAAC,EAAD,CAAOoC,QAASA,IAChB,cAAC,EAAD,CAAQA,QAASA,IACjB,cAAC,EAAD,CAAYA,QAASA,QCtCduB,EAVH,WAAO,IAAD,EACYC,qBAAWtE,EAASnB,GADhC,mBACPoB,EADO,KACAkC,EADA,KAGd,OACI,cAACtC,EAAM0E,SAAP,CAAgBC,MAAO,CAACrC,WAAUlC,SAAlC,SACI,cAAC,EAAD,OCPZwE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,WAAa,+BAA+B,OAAS,2BAA2B,QAAU,4BAA4B,QAAU,4BAA4B,KAAO,yBAAyB,cAAgB,kCAAkC,IAAM,wBAAwB,SAAW,6BAA6B,OAAS,2BAA2B,WAAa,kC","file":"static/js/main.c54aa24a.chunk.js","sourcesContent":["const ACTIONS = {\n    RESET_STATE: 'RESET_STATE',\n    SET_TEXT: 'SET_TEXT',\n    SET_RIGHT_KEY: 'SET_RIGHT_KEY',\n    SET_WRONG_KEY: 'SET_WRONG_KEY',\n    COMPLETE: 'COMPLETE',\n    WRONG_SYMBOL: 'WRONG_SYMBOL',\n    START: 'START',\n    SET_SPEED: 'SET_SPEED',\n    SET_LANGUAGE: 'SET_LANGUAGE'\n}\nexport default ACTIONS","const initialState = {\n    outgoingValues: '',\n    typedText: '',\n    incomingValues: '',\n    _textLength: 0,\n    percent: 0,\n    currentSymbol: '',\n    isSymbolWrong: false,\n    startTime: null,\n    speed: 0,\n    accuracy: 100,\n    language: 'eng',\n    isStart: true,\n    isResult: false,\n    _mistakes: 0,\n    _duration: 0\n};\n\nexport default initialState","import React from 'react';\n\nimport ACTIONS from './actions';\nimport initialState from './initialState';\n\nexport const Store = React.createContext();\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.RESET_STATE:\n            return {\n                ...initialState,\n                isStart: false,\n                language: state.language\n            }\n        case ACTIONS.SET_TEXT:\n            return {\n                ...state,\n                incomingValues: action.result.substr(1),\n                _textLength: action.result.length,\n                currentSymbol: action.result.charAt(0),\n            }\n        case ACTIONS.START:\n            return {\n                ...state,\n                startTime: state.startTime || action.time\n            }\n        case ACTIONS.SET_SPEED:\n            return {\n                ...state,\n                _duration: (action.time - state.startTime) / 60000,\n                speed: state._duration ?\n                    (state.outgoingValues.length / state._duration).toFixed(0,) : 0\n            }\n        case ACTIONS.SET_RIGHT_KEY:\n            return {\n                ...state,\n                outgoingValues: state.outgoingValues + action.key,\n                typedText: state.typedText + action.key,\n                incomingValues: state.incomingValues.substr(1),\n                currentSymbol: state.incomingValues.charAt(0),\n                isSymbolWrong: false,\n                percent: ((state.outgoingValues.length + 1) * 100) / state._textLength\n            }\n        case ACTIONS.COMPLETE:\n            return {\n                ...state,\n                isResult: true,\n                outgoingValues: ''\n            }\n        case ACTIONS.WRONG_SYMBOL:\n            return {\n                ...state,\n                isSymbolWrong: true\n            }\n        case ACTIONS.SET_WRONG_KEY:\n            return {\n                ...state,\n                typedText: state.typedText + action.key,\n                accuracy: (100 - ((state._mistakes + 1) * 100 / state._textLength)).toFixed(1,),\n                _mistakes: state._mistakes + 1\n            }\n\n        case ACTIONS.SET_LANGUAGE:\n            return {\n                ...state,\n                language: action.language\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;","const getText = (language) => {\n    if (language === 'rus') {\n        return fetch('https://fish-text.ru/get?format=json&number=3')\n            .then(response => response.json())\n            .then(object => object.text)\n    }\n    if (language === 'eng') {\n        return fetch('https://baconipsum.com/api/?type=all-meat&sentences=4')\n            .then(response => response.json())\n            .then(array => array[0])\n    }\n}\nexport default getText\n","const getCurrentTime = () => new Date().getTime()\n\nexport default getCurrentTime","import {useState, useEffect} from 'react';\n\nconst useKeyPress = (callback) => {\n    const [keyPressed, setKeyPressed] = useState()\n    const downHandler = ({key}) => {\n        if (keyPressed !== key && key.length === 1) {\n            setKeyPressed(key)\n            callback(key)\n        }\n    }\n    const upHandler = () => {\n        setKeyPressed(null)\n    }\n    useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        window.addEventListener('keyup', upHandler);\n        return () => {\n            window.removeEventListener('keydown', downHandler);\n            window.removeEventListener('keyup', upHandler);\n        }\n    })\n    return keyPressed\n};\nexport default useKeyPress;","import React, {useContext} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown } from 'react-bootstrap';\n\nimport ACTIONS from '../store/actions';\nimport {Store} from '../store/reducer';\n\nconst Language = () => {\n    const {state, dispatch} = useContext(Store);\n\n    const changeLanguage = (language) => {\n        dispatch({type: ACTIONS.SET_LANGUAGE, language});\n    };\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n                {state.language === 'eng' && 'английский'}\n                {state.language === 'rus' && 'русский'}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n                <Dropdown.Item eventKey=\"1\" onClick={() => changeLanguage('rus')}>русский</Dropdown.Item>\n                <Dropdown.Item eventKey=\"2\" onClick={() => changeLanguage('eng')}>английский</Dropdown.Item>\n            </Dropdown.Menu>\n        </Dropdown>\n    )\n}\n\nexport default Language","import React, { useContext } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Alert, Button} from 'react-bootstrap';\n\nimport Language from './Language';\n\nimport {Store} from '../store/reducer';\n\nconst Start = ({onStart}) => {\n    const {state} = useContext(Store);\n    return (\n        <div className={state.isStart ? \"w-100 h-75 position-absolute d-flex justify-content-center\" : \"d-none\"}>\n                <Alert show={state.isStart} variant=\"secondary\" className=\"w-25 align-self-center\">\n                    <Alert.Heading>Проверьте скорость своей печати</Alert.Heading>\n                    <p>\n                        Наберите небольшой текст, чтобы узнать скорость и точноть набора\n                    </p>\n                    <hr />\n                    <div className=\"d-flex justify-content-between\">\n                    <Button onClick={onStart} variant=\"outline-info\">\n                        Начать\n                    </Button>\n                    <Language/>\n                    </div>\n                </Alert>\n            \n        </div>\n    )\n}\n\nexport default Start","export default __webpack_public_path__ + \"static/media/restart.6f33e8f5.png\";","import React, {useContext} from 'react';\n\nimport classes from './TypingArea.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {ProgressBar} from 'react-bootstrap';\n\nimport restart from '../icons/restart.png';\n\nimport {Store} from '../store/reducer';\n\nconst TypingArea = ({onStart}) => {\n    const {state} = useContext(Store);\n    return (\n        <div className={classes.typingArea}>\n            <div className={classes.header}>\n                <ProgressBar now={state.percent} variant=\"success\" animated className=\"w-75\"/>\n                <img src={restart} alt=\"restart\" width=\"40\" className={classes.restart} \n                    onClick={onStart}/>\n            </div>\n            <div className={classes.content}>\n                <div className={classes.text}>\n                    <span className={classes.outgoingValue}>\n                        {state.outgoingValues}\n                    </span>\n                    <span className={`${classes.key} ${state.isSymbolWrong && classes.keyWrong}`}>\n                        {state.currentSymbol}\n                    </span>\n                    <span>{state.incomingValues}</span>\n                </div>\n                <div className={classes.result}>\n                    <div>\n                        Скорость \n                        <div>\n                            {state.speed} зн/мин\n                        </div>\n                    </div>\n                    \n                    <div>\n                        Точность\n                        <div>\n                            {state.accuracy}%\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TypingArea","import React, {useContext} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Alert, Button} from 'react-bootstrap';\n\nimport Language from './Language';\n\nimport {Store} from '../store/reducer';\n\nconst Result = ({onStart}) => {\n    const {state} = useContext(Store);\n    return (\n        <div className={state.isResult ? \"w-100 h-75 position-absolute d-flex justify-content-center\" : \"d-none\"}>\n            <Alert show={state.isResult} variant=\"success\" className=\"w-25 align-self-center\">\n                <Alert.Heading>Ваш результат</Alert.Heading>\n                <p>\n                    {state.speed} знаков в минуту\n                </p>\n                <p>\n                    {state.accuracy}% точности\n                </p>\n                <hr />\n                <div className=\"d-flex justify-content-between\">\n                <Button onClick={onStart} variant=\"outline-success\">\n                    Начать заново\n                </Button>\n                <Language/>\n                </div>\n            </Alert>\n        </div>\n    )\n}\n\nexport default Result","import React, { useContext } from 'react';\nimport { Store } from '../store/reducer';\nimport ACTIONS from '../store/actions';\n\nimport getText from '../utils/getText';\nimport getCurrentTime from '../utils/getCurrentTime';\nimport useKeyPress from '../utils/useKeyPress';\n\nimport Start from './Start';\nimport TypingArea from './TypingArea';\nimport Result from './Result';\n\nconst TypeTextTest = () => {\n    const { state, dispatch } = useContext(Store);\n\n    const onStart = () => {\n        dispatch({ type: ACTIONS.RESET_STATE });\n        getText(state.language)\n            .then(result => {\n                dispatch({ type: ACTIONS.SET_TEXT, result });\n            });\n    };\n\n    const onKeyPress = (key) => {\n        dispatch({ type: ACTIONS.START, time: getCurrentTime() });\n        \n        let isTyping = Boolean(state.startTime && state.outgoingValues);\n        if (isTyping) {\n            dispatch({ type: ACTIONS.SET_SPEED, time: getCurrentTime() });\n        };\n\n        if (key === state.currentSymbol) {\n            dispatch({ type: ACTIONS.SET_RIGHT_KEY, key });\n\n            let isFinished = Boolean(state.startTime && !state.incomingValues);\n            if (isFinished) {\n                dispatch({ type: ACTIONS.COMPLETE });\n            };\n\n        } else {\n            dispatch({ type: ACTIONS.WRONG_SYMBOL });\n\n            let isMistakeNew = state.typedText.substr(-1) === state.outgoingValues.substr(-1);\n            if (isMistakeNew) {\n                dispatch({ type: ACTIONS.SET_WRONG_KEY, key });\n            };\n        };\n    };\n\n    useKeyPress(onKeyPress);\n\n    return <div>\n        <Start onStart={onStart} />\n        <Result onStart={onStart} />\n        <TypingArea onStart={onStart} />\n    </div>\n}\n\nexport default TypeTextTest","import React, { useReducer } from 'react';\nimport reducer, {Store} from '../store/reducer';\nimport initialState from '../store/initialState';\nimport TypeTextTest from './TypeTextTest';\n\n\nconst App = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    \n    return (\n        <Store.Provider value={{dispatch, state}}>\n            <TypeTextTest />\n        </Store.Provider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typingArea\":\"TypingArea_typingArea__zhN3k\",\"header\":\"TypingArea_header__2Ayd8\",\"restart\":\"TypingArea_restart__1aAgy\",\"content\":\"TypingArea_content__2Ni6O\",\"text\":\"TypingArea_text__2xc2o\",\"outgoingValue\":\"TypingArea_outgoingValue__1-43Q\",\"key\":\"TypingArea_key__1Ra3V\",\"keyWrong\":\"TypingArea_keyWrong__1gMvB\",\"result\":\"TypingArea_result__1UyyT\",\"resultName\":\"TypingArea_resultName__1L1v_\"};"],"sourceRoot":""}